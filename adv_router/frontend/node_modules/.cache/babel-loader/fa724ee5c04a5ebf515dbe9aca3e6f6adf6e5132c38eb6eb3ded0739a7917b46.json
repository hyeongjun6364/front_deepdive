{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\USER\\\\Desktop\\\\React_deepening\\\\adv_router\\\\frontend\\\\src\\\\pages\\\\NewEventPage.js\";\nimport React from 'react';\nimport EventForm from '../components/EventForm';\nimport { json } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction NewEventPage() {\n  return /*#__PURE__*/_jsxDEV(EventForm, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 5\n  }, this);\n}\n_c = NewEventPage;\nexport default NewEventPage;\nexport async function action({\n  request,\n  params\n}) {\n  //request 객체에 폼데이터가 있음\n  const data = await request.formData();\n  const eventData = {\n    title: data.get('title'),\n    image: data.get('image'),\n    date: data.get('date'),\n    description: data.get('description')\n  };\n  data.get('');\n  const response = await fetch('http://localhost:8080/events', {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(eventData)\n  });\n  if (!response.ok) {\n    throw json({\n      message: 'Could not save event. '\n    }, {\n      status: 500\n    });\n  }\n  return redirect('/event');\n}\nvar _c;\n$RefreshReg$(_c, \"NewEventPage\");","map":{"version":3,"names":["React","EventForm","json","jsxDEV","_jsxDEV","NewEventPage","fileName","_jsxFileName","lineNumber","columnNumber","_c","action","request","params","data","formData","eventData","title","get","image","date","description","response","fetch","method","headers","body","JSON","stringify","ok","message","status","redirect","$RefreshReg$"],"sources":["C:/Users/USER/Desktop/React_deepening/adv_router/frontend/src/pages/NewEventPage.js"],"sourcesContent":["import React from 'react'\r\nimport EventForm from '../components/EventForm';\r\nimport { json } from 'react-router-dom';\r\nfunction NewEventPage() {\r\n\r\n  return (\r\n    <EventForm/>\r\n  )\r\n}\r\n\r\nexport default NewEventPage\r\n\r\nexport async function action({request,params}){\r\n  //request 객체에 폼데이터가 있음\r\n  const data = await request.formData();\r\n  const eventData = {\r\n    title: data.get('title'),\r\n    image:data.get('image'),\r\n    date: data.get('date'),\r\n    description: data.get('description')\r\n  }\r\n  data.get('');\r\n  const response =await fetch('http://localhost:8080/events',{\r\n    method:'POST',\r\n    headers:{\r\n      'Content-Type': 'application/json'\r\n    },\r\n    body: JSON.stringify(eventData)\r\n  })\r\n\r\n  if (!response.ok){\r\n    throw json({message: 'Could not save event. '},{status: 500})\r\n  }\r\n  \r\n  return redirect('/event')\r\n}"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,SAAS,MAAM,yBAAyB;AAC/C,SAASC,IAAI,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AACxC,SAASC,YAAYA,CAAA,EAAG;EAEtB,oBACED,OAAA,CAACH,SAAS;IAAAK,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAC,CAAC;AAEhB;AAACC,EAAA,GALQL,YAAY;AAOrB,eAAeA,YAAY;AAE3B,OAAO,eAAeM,MAAMA,CAAC;EAACC,OAAO;EAACC;AAAM,CAAC,EAAC;EAC5C;EACA,MAAMC,IAAI,GAAG,MAAMF,OAAO,CAACG,QAAQ,CAAC,CAAC;EACrC,MAAMC,SAAS,GAAG;IAChBC,KAAK,EAAEH,IAAI,CAACI,GAAG,CAAC,OAAO,CAAC;IACxBC,KAAK,EAACL,IAAI,CAACI,GAAG,CAAC,OAAO,CAAC;IACvBE,IAAI,EAAEN,IAAI,CAACI,GAAG,CAAC,MAAM,CAAC;IACtBG,WAAW,EAAEP,IAAI,CAACI,GAAG,CAAC,aAAa;EACrC,CAAC;EACDJ,IAAI,CAACI,GAAG,CAAC,EAAE,CAAC;EACZ,MAAMI,QAAQ,GAAE,MAAMC,KAAK,CAAC,8BAA8B,EAAC;IACzDC,MAAM,EAAC,MAAM;IACbC,OAAO,EAAC;MACN,cAAc,EAAE;IAClB,CAAC;IACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACZ,SAAS;EAChC,CAAC,CAAC;EAEF,IAAI,CAACM,QAAQ,CAACO,EAAE,EAAC;IACf,MAAM3B,IAAI,CAAC;MAAC4B,OAAO,EAAE;IAAwB,CAAC,EAAC;MAACC,MAAM,EAAE;IAAG,CAAC,CAAC;EAC/D;EAEA,OAAOC,QAAQ,CAAC,QAAQ,CAAC;AAC3B;AAAC,IAAAtB,EAAA;AAAAuB,YAAA,CAAAvB,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}