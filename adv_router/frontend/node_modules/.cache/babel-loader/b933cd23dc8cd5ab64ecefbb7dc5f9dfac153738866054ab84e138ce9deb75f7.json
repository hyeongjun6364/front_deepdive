{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\USER\\\\Desktop\\\\React_deepening\\\\adv_router\\\\frontend\\\\src\\\\pages\\\\NewEventPage.js\";\nimport React from 'react';\nimport EventForm from '../components/EventForm';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction NewEventPage() {\n  return /*#__PURE__*/_jsxDEV(EventForm, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 5\n  }, this);\n}\n_c = NewEventPage;\nexport default NewEventPage;\nexport async function action({\n  request,\n  params\n}) {\n  //request 객체에 폼데이터가 있음\n  const data = await request.formData();\n  const eventData = {\n    title: data.get('title'),\n    image: data.get('image'),\n    date: data.get('date'),\n    description: data.get('description')\n  };\n  data.get('');\n  const response = await fetch('http://localhost:8080/events', {\n    method: 'POST',\n    body: JSON.stringify(eventData)\n  });\n}\nvar _c;\n$RefreshReg$(_c, \"NewEventPage\");","map":{"version":3,"names":["React","EventForm","jsxDEV","_jsxDEV","NewEventPage","fileName","_jsxFileName","lineNumber","columnNumber","_c","action","request","params","data","formData","eventData","title","get","image","date","description","response","fetch","method","body","JSON","stringify","$RefreshReg$"],"sources":["C:/Users/USER/Desktop/React_deepening/adv_router/frontend/src/pages/NewEventPage.js"],"sourcesContent":["import React from 'react'\r\nimport EventForm from '../components/EventForm';\r\n\r\nfunction NewEventPage() {\r\n\r\n  return (\r\n    <EventForm/>\r\n  )\r\n}\r\n\r\nexport default NewEventPage\r\n\r\nexport async function action({request,params}){\r\n  //request 객체에 폼데이터가 있음\r\n  const data = await request.formData();\r\n  const eventData = {\r\n    title: data.get('title'),\r\n    image:data.get('image'),\r\n    date: data.get('date'),\r\n    description: data.get('description')\r\n  }\r\n  data.get('');\r\n  const response =await fetch('http://localhost:8080/events',{\r\n    method:'POST',\r\n    body: JSON.stringify(eventData)\r\n  })\r\n}"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,SAAS,MAAM,yBAAyB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhD,SAASC,YAAYA,CAAA,EAAG;EAEtB,oBACED,OAAA,CAACF,SAAS;IAAAI,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAC,CAAC;AAEhB;AAACC,EAAA,GALQL,YAAY;AAOrB,eAAeA,YAAY;AAE3B,OAAO,eAAeM,MAAMA,CAAC;EAACC,OAAO;EAACC;AAAM,CAAC,EAAC;EAC5C;EACA,MAAMC,IAAI,GAAG,MAAMF,OAAO,CAACG,QAAQ,CAAC,CAAC;EACrC,MAAMC,SAAS,GAAG;IAChBC,KAAK,EAAEH,IAAI,CAACI,GAAG,CAAC,OAAO,CAAC;IACxBC,KAAK,EAACL,IAAI,CAACI,GAAG,CAAC,OAAO,CAAC;IACvBE,IAAI,EAAEN,IAAI,CAACI,GAAG,CAAC,MAAM,CAAC;IACtBG,WAAW,EAAEP,IAAI,CAACI,GAAG,CAAC,aAAa;EACrC,CAAC;EACDJ,IAAI,CAACI,GAAG,CAAC,EAAE,CAAC;EACZ,MAAMI,QAAQ,GAAE,MAAMC,KAAK,CAAC,8BAA8B,EAAC;IACzDC,MAAM,EAAC,MAAM;IACbC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACX,SAAS;EAChC,CAAC,CAAC;AACJ;AAAC,IAAAN,EAAA;AAAAkB,YAAA,CAAAlB,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}