{"ast":null,"code":"import { createStore } from 'redux';\nimport { createSlice, configureStore } from '@reduxjs/toolkit';\nexport const INCREMENT = 'increment';\nconst initialCounterState = {\n  counter: 0,\n  showCounter: true\n};\nconst counterSlice = createSlice({\n  name: 'counter',\n  initialCounterState: initialCounterState,\n  reducers: {\n    increment(state) {\n      //원래 리덕스의 상태를 이용하려면 불변성을 이용하여 \n      //객체를 복사후 값을 증가시켰지만\n      //자동으로 리덕스 툴킷은 객체를 자동으로 복사를 해준다.\n      state.counter++;\n    },\n    decrement(state) {\n      state.counter--;\n    },\n    increase(state, action) {\n      state.counter = state.counter + action.payload;\n    },\n    toggleCounter(state) {\n      state.showCounter = !state.showCounter;\n    }\n  }\n});\nconst initialAuthState = {\n  isAuthenticated: false\n};\ncreateSlice({\n  name: 'authentication',\n  initialState: initialAuthState,\n  reducers: {\n    login(state) {},\n    loghout(state) {}\n  }\n});\nconst store = configureStore({\n  reducer: counterSlice.reducer\n});\nexport const counterActions = counterSlice.actions;\nexport default store;","map":{"version":3,"names":["createStore","createSlice","configureStore","INCREMENT","initialCounterState","counter","showCounter","counterSlice","name","reducers","increment","state","decrement","increase","action","payload","toggleCounter","initialAuthState","isAuthenticated","initialState","login","loghout","store","reducer","counterActions","actions"],"sources":["C:/Users/USER/Desktop/React_deepening/redux_deep/src/store/index.js"],"sourcesContent":["import {createStore} from 'redux'\r\nimport {createSlice,configureStore} from '@reduxjs/toolkit'\r\n\r\nexport const INCREMENT = 'increment';\r\nconst initialCounterState = {counter:0,showCounter:true}\r\nconst counterSlice = createSlice({\r\n    name:'counter',\r\n    initialCounterState:initialCounterState,\r\n    reducers:{\r\n        increment(state) {\r\n            //원래 리덕스의 상태를 이용하려면 불변성을 이용하여 \r\n            //객체를 복사후 값을 증가시켰지만\r\n            //자동으로 리덕스 툴킷은 객체를 자동으로 복사를 해준다.\r\n            state.counter++\r\n        },\r\n        decrement(state) {\r\n            state.counter--\r\n        },\r\n        increase(state,action){\r\n            state.counter = state.counter + action.payload\r\n        },\r\n        toggleCounter(state){\r\n            state.showCounter = !state.showCounter\r\n        },\r\n\r\n    }\r\n})\r\nconst initialAuthState = {\r\n    isAuthenticated:false\r\n}\r\ncreateSlice({\r\n    name:'authentication',\r\n    initialState:initialAuthState,\r\n    reducers:{\r\n        login(state){\r\n\r\n        },\r\n        loghout(state){\r\n\r\n        }\r\n    }\r\n})\r\nconst store = configureStore({\r\n    reducer: counterSlice.reducer\r\n})\r\n\r\nexport const counterActions = counterSlice.actions\r\nexport default store;\r\n\r\n"],"mappings":"AAAA,SAAQA,WAAW,QAAO,OAAO;AACjC,SAAQC,WAAW,EAACC,cAAc,QAAO,kBAAkB;AAE3D,OAAO,MAAMC,SAAS,GAAG,WAAW;AACpC,MAAMC,mBAAmB,GAAG;EAACC,OAAO,EAAC,CAAC;EAACC,WAAW,EAAC;AAAI,CAAC;AACxD,MAAMC,YAAY,GAAGN,WAAW,CAAC;EAC7BO,IAAI,EAAC,SAAS;EACdJ,mBAAmB,EAACA,mBAAmB;EACvCK,QAAQ,EAAC;IACLC,SAASA,CAACC,KAAK,EAAE;MACb;MACA;MACA;MACAA,KAAK,CAACN,OAAO,EAAE;IACnB,CAAC;IACDO,SAASA,CAACD,KAAK,EAAE;MACbA,KAAK,CAACN,OAAO,EAAE;IACnB,CAAC;IACDQ,QAAQA,CAACF,KAAK,EAACG,MAAM,EAAC;MAClBH,KAAK,CAACN,OAAO,GAAGM,KAAK,CAACN,OAAO,GAAGS,MAAM,CAACC,OAAO;IAClD,CAAC;IACDC,aAAaA,CAACL,KAAK,EAAC;MAChBA,KAAK,CAACL,WAAW,GAAG,CAACK,KAAK,CAACL,WAAW;IAC1C;EAEJ;AACJ,CAAC,CAAC;AACF,MAAMW,gBAAgB,GAAG;EACrBC,eAAe,EAAC;AACpB,CAAC;AACDjB,WAAW,CAAC;EACRO,IAAI,EAAC,gBAAgB;EACrBW,YAAY,EAACF,gBAAgB;EAC7BR,QAAQ,EAAC;IACLW,KAAKA,CAACT,KAAK,EAAC,CAEZ,CAAC;IACDU,OAAOA,CAACV,KAAK,EAAC,CAEd;EACJ;AACJ,CAAC,CAAC;AACF,MAAMW,KAAK,GAAGpB,cAAc,CAAC;EACzBqB,OAAO,EAAEhB,YAAY,CAACgB;AAC1B,CAAC,CAAC;AAEF,OAAO,MAAMC,cAAc,GAAGjB,YAAY,CAACkB,OAAO;AAClD,eAAeH,KAAK"},"metadata":{},"sourceType":"module","externalDependencies":[]}